# vim: syntax=sh
alias ctags-ruby='ctags -R --languages=ruby'

export EDITOR=`which nvim`

alias b=bundle
alias bi="bundle install"
alias be="bundle exec"
alias beer="bundle exec rake"

alias gdf="git diff"
alias glg="git log"
alias g=git
alias master="git checkout master"

# Variable to store the created aliases
GIT_BRANCH_ALIASES=()
# Variable to store the names of aliases that were not created due to conflicts
GIT_BRANCH_CONFLICTS=()

# Function to generate aliases for git branches
generate_git_aliases() {
  local branches
  branches=$(git branch --format='%(refname:short)' 2>/dev/null)

  # Check if inside a git repository
  if [ $? -ne 0 ]; then
    return
  fi

  # Remove existing branch aliases
  unset_branches

  # Clear conflicts from the previous run
  GIT_BRANCH_CONFLICTS=()

  # Create aliases for each branch
  echo "$branches" | while IFS= read -r branch; do
    # Extract the last part of the branch name for alias
    local alias_name=${branch##*/}

    # Check if a command with the same name already exists
    if command -v $alias_name >/dev/null 2>&1; then
      # Store conflicts and continue to next branch
      GIT_BRANCH_CONFLICTS+=($alias_name)
      continue
    fi

    # Create alias and add it to the list of tracked aliases
    alias $alias_name="git checkout '$branch'"
    GIT_BRANCH_ALIASES+=($alias_name)
  done

  # Report any conflicts
  if [ ${#GIT_BRANCH_CONFLICTS[@]} -gt 0 ]; then
    >&2 echo "The following aliases were not created due to conflicts with existing commands:"

    >&2 echo "${GIT_BRANCH_CONFLICTS[*]}"
  fi
}

# Function to remove all dynamically created aliases
unset_branches() {
  # Loop over stored aliases and remove them
  for alias_name in "${GIT_BRANCH_ALIASES[@]}"; do
    unalias $alias_name
  done

  # Clear the alias list
  GIT_BRANCH_ALIASES=()
}

# Hook function to run every time the directory changes
function chpwd() {
  if git rev-parse --is-inside-work-tree &>/dev/null; then
    generate_git_aliases
  else
    unset_branches
  fi
}

# Initial alias generation
chpwd


alias gco="git checkout"
alias gcob="git checkout -b"
alias gst="git status"
alias grb="git rebase"

alias gdci="git duet-commit"
alias gci="git commit"

alias reqs="pip install -r requirements.txt"

alias tf=terraform

setopt sh_word_split
git help -a | grep -E "^(\s+)[a-z]" | awk '{print $1}' | while read line; do
  for word in $line
  do
    if ! type "$word" > /dev/null; then
      alias $word="git ${word}"
    fi
  done
done
unsetopt sh_word_split

# http://superuser.com/a/611582
function stopwatch(){
  date1=`gdate +%s`;
  while true; do
    echo -ne "$(gdate -u --date @$((`gdate +%s` - $date1)) +%H:%M:%S)\r";
  sleep 0.1
    done
}
function countdown(){
  date1=$((`gdate +%s` + $1));
  while [ "$date1" -ge `gdate +%s` ]; do
    echo -ne "$(gdate -u --date @$(($date1 - `gdate +%s`)) +%H:%M:%S)\r";
  sleep 0.1
    done
}
export PATH="/Users/holek/bin:$PATH"
source <(fzf --zsh)
